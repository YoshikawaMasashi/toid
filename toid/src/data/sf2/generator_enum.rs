pub enum GeneratorEnum {
    StartAddrsOffset,
    EndAddrsOffset,
    StartloopAddrsOffset,
    EndloopAddrsOffset,
    StartAddrsCoarseOffset,
    ModLfoToPitch,
    VibLfoToPitch,
    ModEnvToPitch,
    InitialFilterFc,
    InitialFilterQ,
    ModLfoToFilterFc,
    ModEnvToFilterFc,
    EndAddrsCoarseOffset,
    ModLfoToVolume,
    Unused1,
    ChorusEffectsSend,
    ReverbEffectsSend,
    Pan,
    Unused2,
    Unused3,
    Unused4,
    DelayModLFO,
    FreqModLFO,
    DelayVibLFO,
    FreqVibLFO,
    DelayModEnv,
    AttackModEnv,
    HoldModEnv,
    DecayModEnv,
    SustainModEnv,
    ReleaseModEnv,
    KeynumToModEnvHold,
    KeynumToModEnvDecay,
    DelayVolEnv,
    AttackVolEnv,
    HoldVolEnv,
    DecayVolEnv,
    SustainVolEnv,
    ReleaseVolEnv,
    KeynumToVolEnvHold,
    KeynumToVolEnvDecay,
    Instrument,
    Reserved1,
    KeyRange,
    VelRange,
    StartloopAddrsCoarseOffset,
    Keynum,
    Velocity,
    InitialAttenuation,
    Reserved2,
    EndloopAddrsCoarseOffset,
    CoarseTune,
    FineTune,
    SampleID,
    SampleModes,
    Reserved3,
    ScaleTuning,
    ExclusiveClass,
    OverridingRootKey,
    Unused5,
    EndOper,
}

impl GeneratorEnum {
    pub fn from_id(id: i32) -> Option<GeneratorEnum> {
        match id {
            0 => Some(GeneratorEnum::StartAddrsOffset),
            1 => Some(GeneratorEnum::EndAddrsOffset),
            2 => Some(GeneratorEnum::StartloopAddrsOffset),
            3 => Some(GeneratorEnum::EndloopAddrsOffset),
            4 => Some(GeneratorEnum::StartAddrsCoarseOffset),
            5 => Some(GeneratorEnum::ModLfoToPitch),
            6 => Some(GeneratorEnum::VibLfoToPitch),
            7 => Some(GeneratorEnum::ModEnvToPitch),
            8 => Some(GeneratorEnum::InitialFilterFc),
            9 => Some(GeneratorEnum::InitialFilterQ),
            10 => Some(GeneratorEnum::ModLfoToFilterFc),
            11 => Some(GeneratorEnum::ModEnvToFilterFc),
            12 => Some(GeneratorEnum::EndAddrsCoarseOffset),
            13 => Some(GeneratorEnum::ModLfoToVolume),
            14 => Some(GeneratorEnum::Unused1),
            15 => Some(GeneratorEnum::ChorusEffectsSend),
            16 => Some(GeneratorEnum::ReverbEffectsSend),
            17 => Some(GeneratorEnum::Pan),
            18 => Some(GeneratorEnum::Unused2),
            19 => Some(GeneratorEnum::Unused3),
            20 => Some(GeneratorEnum::Unused4),
            21 => Some(GeneratorEnum::DelayModLFO),
            22 => Some(GeneratorEnum::FreqModLFO),
            23 => Some(GeneratorEnum::DelayVibLFO),
            24 => Some(GeneratorEnum::FreqVibLFO),
            25 => Some(GeneratorEnum::DelayModEnv),
            26 => Some(GeneratorEnum::AttackModEnv),
            27 => Some(GeneratorEnum::HoldModEnv),
            28 => Some(GeneratorEnum::DecayModEnv),
            29 => Some(GeneratorEnum::SustainModEnv),
            30 => Some(GeneratorEnum::ReleaseModEnv),
            31 => Some(GeneratorEnum::KeynumToModEnvHold),
            32 => Some(GeneratorEnum::KeynumToModEnvDecay),
            33 => Some(GeneratorEnum::DelayVolEnv),
            34 => Some(GeneratorEnum::AttackVolEnv),
            35 => Some(GeneratorEnum::HoldVolEnv),
            36 => Some(GeneratorEnum::DecayVolEnv),
            37 => Some(GeneratorEnum::SustainVolEnv),
            38 => Some(GeneratorEnum::ReleaseVolEnv),
            39 => Some(GeneratorEnum::KeynumToVolEnvHold),
            40 => Some(GeneratorEnum::KeynumToVolEnvDecay),
            41 => Some(GeneratorEnum::Instrument),
            42 => Some(GeneratorEnum::Reserved1),
            43 => Some(GeneratorEnum::KeyRange),
            44 => Some(GeneratorEnum::VelRange),
            45 => Some(GeneratorEnum::StartloopAddrsCoarseOffset),
            46 => Some(GeneratorEnum::Keynum),
            47 => Some(GeneratorEnum::Velocity),
            48 => Some(GeneratorEnum::InitialAttenuation),
            49 => Some(GeneratorEnum::Reserved2),
            50 => Some(GeneratorEnum::EndloopAddrsCoarseOffset),
            51 => Some(GeneratorEnum::CoarseTune),
            52 => Some(GeneratorEnum::FineTune),
            53 => Some(GeneratorEnum::SampleID),
            54 => Some(GeneratorEnum::SampleModes),
            55 => Some(GeneratorEnum::Reserved3),
            56 => Some(GeneratorEnum::ScaleTuning),
            57 => Some(GeneratorEnum::ExclusiveClass),
            58 => Some(GeneratorEnum::OverridingRootKey),
            59 => Some(GeneratorEnum::Unused5),
            60 => Some(GeneratorEnum::EndOper),
            _ => None,
        }
    }
}
